name: Train FX CNN-LSTM

on:
  workflow_dispatch:
  schedule:
    # Weekdays at 03:15 UTC (adjust as desired)
    - cron: "15 3 * * 1-5"

permissions:
  contents: read

jobs:
  train:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"   # unbuffered Python logs for clear tracebacks

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace files (pre)
        run: |
          pwd
          git rev-parse --abbrev-ref HEAD || true
          ls -la
          echo "---- config.yaml ----"
          sed -n '1,200p' config.yaml || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -V
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "---- pip freeze (first 200 lines) ----"
          pip freeze | sed -n '1,200p'

      - name: Export env (FX_TICKERS)
        env:
          FX_TICKERS: ${{ vars.FX_TICKERS || secrets.FX_TICKERS }}
        run: |
          echo "FX_TICKERS=${FX_TICKERS}" >> $GITHUB_ENV
          echo "Using pairs: ${FX_TICKERS}"

      - name: Verify dukascopy import
        run: |
          python -c "import dukascopy_python as dk; import dukascopy_python.instruments as inst; print('dukascopy_python OK')"

      - name: Smoke check (optional)
        run: |
          mkdir -p artifacts
          if [ -f src/smoke.py ]; then
            python -m src.smoke | tee artifacts/smoke_log.txt
          else
            echo "No smoke.py present, skipping."
          fi

      - name: Train model
        run: |
          mkdir -p artifacts
          # capture the entire training log even if the UI truncates
          python -X faulthandler -m src.train 2>&1 | tee artifacts/train_log.txt

      - name: Verify outputs exist
        run: |
          if [ ! -f models/cnn_lstm_fx.h5 ]; then
            echo 'Model missing: models/cnn_lstm_fx.h5'
            echo 'Check artifacts/train_log.txt in the uploaded artifacts for the traceback.'
            exit 1
          fi
          ls -la models || true
          ls -la artifacts || true

      - name: Upload model & artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: model-and-artifacts
          path: |
            models/
            artifacts/
          if-no-files-found: warn
