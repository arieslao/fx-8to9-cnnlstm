name: Train FX CNN-LSTM

on:
  workflow_dispatch:
  schedule:
    - cron: "15 3 * * 1-5"   # weekdays 03:15 UTC

permissions:
  contents: read

jobs:
  env:
    PYTHONUNBUFFERED: "1"
    TF_CPP_MIN_LOG_LEVEL: "2"
    GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

  train:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Artifact scaffold (ensure uploads exist even if later steps skip)
        run: |
          mkdir -p artifacts
          echo "scaffold $(date -u +%FT%TZ)" > artifacts/hello.txt

      - name: Show workspace files (pre)
        run: |
          pwd
          git rev-parse --abbrev-ref HEAD || true
          ls -la
          echo "---- config.yaml ----"
          sed -n '1,200p' config.yaml || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -V
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "---- pip freeze (first 200 lines) ----"
          pip freeze | sed -n '1,200p'

      - name: Export env (FX_TICKERS)
        env:
          FX_TICKERS: ${{ vars.FX_TICKERS || secrets.FX_TICKERS }}
        run: |
          echo "FX_TICKERS=${FX_TICKERS}" >> $GITHUB_ENV
          echo "Using pairs: ${FX_TICKERS}"

      - name: Verify dukascopy import
        run: |
          python -c "import dukascopy_python as dk; import dukascopy_python.instruments as inst; print('dukascopy_python OK')"

      - name: Train model
        run: |
          # save the entire training log even if UI truncates
          python -X faulthandler -m src.train 2>&1 | tee -a artifacts/train_log.txt

      - name: Verify outputs exist
        run: |
          if [ ! -f models/cnn_lstm_fx.h5 ]; then
            echo 'Model missing: models/cnn_lstm_fx.h5' | tee -a artifacts/train_log.txt
            exit 1
          fi
          ls -la models | tee -a artifacts/train_log.txt
          ls -la artifacts || true

      - name: Job summary
        if: always()
        run: |
          echo "## Train run summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** $GITHUB_REF_NAME" >> $GITHUB_STEP_SUMMARY
          echo "**FX_TICKERS:** ${FX_TICKERS}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts include \`train_log.txt\` and (on success) the model under \`models/\`." >> $GITHUB_STEP_SUMMARY

      - name: Upload model & artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: model-and-artifacts
          path: |
            models/
            artifacts/
          if-no-files-found: warn
